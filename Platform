-- LocalScript inside StarterPlayerScripts

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local tpHeight = 60
local platformSize = Vector3.new(6,1,6)
local platformColor = Color3.fromRGB(100,200,255)
local UserInputService = game:GetService("UserInputService")

-- ðŸ”¹ GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "TeleportGui"
screenGui.Parent = player:WaitForChild("PlayerGui")

local button = Instance.new("TextButton")
button.Size = UDim2.new(0,200,0,50)
button.Position = UDim2.new(0.5,-100,0.8,0)
button.Text = "TP 60 + Platform + C/V"
button.BackgroundColor3 = Color3.fromRGB(50,150,250)
button.TextColor3 = Color3.new(1,1,1)
button.Font = Enum.Font.SourceSansBold
button.TextSize = 18
button.Parent = screenGui
button.Active = true
button.AutoButtonColor = true

-- ðŸ”¹ Draggable
local dragging
local dragInput
local dragStart
local startPos

local function update(input)
	local delta = input.Position - dragStart
	button.Position = UDim2.new(
		startPos.X.Scale,
		startPos.X.Offset + delta.X,
		startPos.Y.Scale,
		startPos.Y.Offset + delta.Y
	)
end

button.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
		dragStart = input.Position
		startPos = button.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

button.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement then
		dragInput = input
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		update(input)
	end
end)

-- ðŸ”¹ Spawn Platform & Teleport
local function spawnPlatformAbove()
	if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then return end
	local root = player.Character.HumanoidRootPart
	local platform = Instance.new("Part")
	platform.Size = platformSize
	platform.Anchored = true
	platform.CanCollide = true
	platform.Color = platformColor
	platform.Position = root.Position + Vector3.new(0,tpHeight,0)
	platform.Name = "HighPlatform"
	platform.Parent = workspace
	root.CFrame = CFrame.new(platform.Position + Vector3.new(0,platform.Size.Y/2 + root.Size.Y/2,0))
end

-- ðŸ”¹ Equip tool by name ("CidV2")
local function equipToolByName(toolName)
	local char = player.Character
	local backpack = player:WaitForChild("Backpack")
	if not char then return nil end
	local tool = backpack:FindFirstChild(toolName)
	if tool then
		char:FindFirstChildOfClass("Humanoid"):EquipTool(tool)
		return tool
	end
	return nil
end

-- ðŸ”¹ Infinite C/V usage
local function startContinuousCV(tool)
	if not tool then return end
	-- Run in coroutine so it doesn't block
	coroutine.wrap(function()
		while tool.Parent and player.Character and player.Character:FindFirstChildOfClass("Humanoid") do
			-- Activate tool (C and V skills)
			tool:Activate()
			wait(0.1) -- small delay to prevent freezing, adjust as needed
		end
	end)()
end


-- ðŸ”¹ Button Click
button.MouseButton1Click:Connect(function()
	spawnPlatformAbove()
	local tool = equipToolByName("CidV2")
	startContinuousCV(tool)
-- Equip the tool
local tool = equipToolByName("CidV2")

-- Use C and V skills
if tool then
    -- If the tool has methods or RemoteEvents named "C" and "V"
    if tool:FindFirstChild("C") and tool.C:IsA("RemoteEvent") then
        tool.C:FireServer() -- triggers C skill
    elseif tool:FindFirstChild("C") and tool.C:IsA("BindableFunction") then
        tool.C:Invoke() -- triggers C skill
    end

    if tool:FindFirstChild("V") and tool.V:IsA("RemoteEvent") then
        tool.V:FireServer() -- triggers V skill
    elseif tool:FindFirstChild("V") and tool.V:IsA("BindableFunction") then
        tool.V:Invoke() -- triggers V skill
    end
end

end)


